---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template Stack_TTL: Demonstrates how to configure
  a stack to delete itself after a specified TTL - time to live. Creates an EC2 instance,
  configures a sample web application on the instance, and schedules stack deletion
  that triggers automatically after the specified TTL. **WARNING** This template creates
  an Amazon EC2 instance. You will be billed for the AWS resources used if you create
  a stack from this template. Based on https://gist.githubusercontent.com/mandeepbal/ca3502f64574792ea2ee/raw/8d70b0f7014c723e26f94bb56c44be13fba07a40/Stack_TTL.template'
Parameters:
  StackTTL:
    Description: Duration in minutes after which the stack should be deleted
    Type: Number
    MinValue: '2'
    MaxValue: '1440'
    Default: '2'
  StackId:
    Description: Id for the Stack to be deleted
    Type: String
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-08842d60
    us-west-1:
      AMI: ami-cfa8a18a
    us-west-2:
      AMI: ami-8786c6b7
    eu-west-1:
      AMI: ami-748e2903
    eu-central-1:
      AMI: ami-b43503a9
    ap-southeast-1:
      AMI: ami-d6e1c584
    ap-southeast-2:
      AMI: ami-fd4724c7
    ap-northeast-1:
      AMI: ami-35072834
    sa-east-1:
      AMI: ami-956cc688
    cn-north-1:
      AMI: ami-ac57c595
Resources:
  WebServerInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          All:
          - ConfigureSampleApp
          - ConfigureTTL
        ConfigureSampleApp:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content:
                Fn::Join:
                - "\n"
                - - <img src="https://s3.amazonaws.com/stelligent-public/websites/logo/Stelligent_A_Hosting_company-RGB.jpg"
                    alt="Stelligent Logo" height="144" width="400">
                  - "<h1>Congratulations, you have successfully launched the AWS CloudFormation
                    sample.</h1>"
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
        ConfigureTTL:
          files:
            "/usr/local/bin/deletestack.sh":
              content:
                Fn::Join:
                - ''
                - - 'aws cloudformation delete-stack --region '
                  - Ref: AWS::Region
                  - " --stack-name "
                  - Ref: StackTTL
              mode: '000400'
              owner: root
              group: root
          commands:
            schedule_stack_deletion:
              command:
                Fn::Join:
                - ''
                - - 'at -f /usr/local/bin/deletestack.sh now + '
                  - Ref: StackTTL
                  - " minutes"
    Properties:
      InstanceType: m3.medium
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      IamInstanceProfile:
        Ref: WebServerIAMInstanceProfile
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'yum update -y aws-cfn-bootstrap

'
            - "# Install the files and packages from the metadata\n"
            - "/opt/aws/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource WebServerInstance "
            - "         --configsets All "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "# Signal the status from cfn-init\n"
            - "/opt/aws/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource WebServerInstance "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: StackDeletorRole
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
  WebServerIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: StackDeletorRole
  StackDeletorRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: This role requires permissions to delete each of the stack resources.
        All other stack resources depend directly or indirectly on this role via DependsOn,
        Ref, or Fn::GetAtt, to ensure that the role is the last of the stack resources
        to be deleted.
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: AllowStackDeletionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: "*"
            Resource:
              Ref: StackId
          - Effect: Allow
            Action:
            - ec2:DescribeInstances
            Resource: "*"
          - Effect: Allow
            Action: "*"
            Resource: "*"
          - Effect: Allow
            Action: "*"
            Resource: "*"
          - Effect: Allow
            Action: "*"
            Resource: "*"
Outputs:
  URL:
    Description: URL of the sample website
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - WebServerInstance
          - PublicDnsName
